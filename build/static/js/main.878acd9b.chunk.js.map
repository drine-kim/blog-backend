{"version":3,"sources":["services/blogs.js","services/comment.js","reducers/notiReducer.js","reducers/blogReducer.js","components/Blog.js","components/Notification.js","services/user.js","components/Users.js","components/User.js","components/AddBlog.js","components/Toggleable.js","components/Blogs.js","services/login.js","reducers/userReducer.js","components/Header.js","components/LoginForm.js","components/Container.js","App.js","store.js","index.js"],"names":["baseUrl","token","logger","getAll","a","axios","get","response","data","create","newBlog","config","headers","Authorization","post","update","id","put","deletee","delete","setToken","newToken","getComment","newObj","blog","showNoti","noti","type","errorReducer","state","action","updateBlog","dispatch","blogService","updatedBlog","setTimeout","error","addComment","newComment","commentsService","savedComment","blogReducer","concat","map","filter","b","comments","Blog","useDispatch","blogs","useSelector","history","useHistory","useState","comment","setComment","handleLikeUpdate","find","toUpdateBlog","likes","handleDelete","window","confirm","deleteBlog","push","handleComment","blogg","text","user","title","href","url","onClick","author","name","value","onChange","e","target","Notification","className","Users","users","setUsers","useEffect","userService","then","to","length","User","AddBlog","handleAddBlog","onSubmit","Toggleable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","marginBottom","buttonText","children","Blogs","blogRef","useRef","blogStyle","paddingTop","paddingBottom","paddingLeft","border","borderWidth","preventDefault","current","savedBlog","addBlog","login","credentials","storeUserData","username","password","loginService","userData","localStorage","setItem","JSON","stringify","userReducer","Header","background","padding","removeItem","LoginForm","handleLogin","Container","App","sort","math","useRouteMatch","userBlogs","params","math1","initializedBlogs","loggedUser","getItem","parse","exact","path","reducer","combineReducers","notiReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.878acd9b.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3002/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newBlog => {\r\n  const config = {\r\n    headers: { Authorization: token},\r\n  }\r\n  const response = await axios.post(baseUrl, newBlog, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id,newBlog) => {\r\n  // const config = {\r\n  //   headers: { Authorization: token },\r\n  // }\r\n  const response = await axios.put(`${baseUrl}/${id}`,newBlog)\r\n  return response.data\r\n}\r\n\r\nconst deletee = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${id}`,config)\r\n  return response.data\r\n}\r\n\r\n// export default { \r\n//   getAll,\r\n//   create,\r\n//   update,\r\n//   deletee,\r\n//   setToken\r\n//  }\r\n\r\nconst logger = {\r\n  getAll,\r\n  create,\r\n  update,\r\n  deletee,\r\n  setToken\r\n};\r\nexport default logger","import axios from \"axios\"\r\n\r\nconst baseUrl = \"http://localhost:3002/api/comments\"\r\n\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return response.data\r\n}\r\n\r\nconst getComment = async (id) => {\r\n    const response = await axios.get(`${baseUrl}/${id}`)\r\n    return response.data\r\n}\r\n\r\nconst create = async (newObj) => {\r\n    const response = await axios.post(`${baseUrl}/${newObj.blog}`, newObj)\r\n    return response.data\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default {\r\n    getAll,\r\n    getComment,\r\n    create\r\n}","\r\nconst errorReducer = ( state, action) => {\r\n    switch (action.type) {\r\n        case 'SHOW_NOTI':\r\n            return action.noti\r\n        \r\n        case 'HIDE_NOTI':\r\n            return action.noti\r\n    \r\n        default:\r\n            return null\r\n    }\r\n   \r\n}\r\n\r\nexport const showNoti = (noti) => {\r\n    return {\r\n        type: 'SHOW_NOTI',\r\n        noti\r\n    }\r\n}\r\n\r\nexport const hideNoti = () => {\r\n    return {\r\n        type: 'HIDE_NOTI',\r\n        noti: null\r\n    }\r\n}\r\n\r\nexport default errorReducer\r\n","import blogService from '../services/blogs'\r\nimport commentsService from '../services/comment'\r\nimport { hideNoti, showNoti } from './notiReducer'\r\n\r\nconst blogReducer = ( state = [], action ) => {\r\n    switch (action.type) {\r\n        case 'ADD_BLOG':{\r\n            //console.log('after add ',state.concat(action.data));\r\n            return state.concat(action.data)\r\n        }\r\n        \r\n        case 'LIKE_UPDATE_BLOG':{\r\n            return state.map( blog => blog.id === action.id ? action.data : blog)\r\n        }\r\n\r\n        case 'DELETE_BLOG':{\r\n            //console.log('after delete ',state.filter ( blog => blog.id !== action.id));\r\n            return state.filter ( blog => blog.id !== action.id)\r\n        }\r\n\r\n        case 'INIT_BLOGS':{\r\n            return action.data\r\n        }\r\n\r\n        case 'ADD_COMMENT':{\r\n            return state.map ( b => b.id === action.data.blog ? ( \r\n                {...b,comments: b.comments.concat(action.data)}\r\n            ) \r\n            : b\r\n            )\r\n        }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addBlog = newBlog => {\r\n    return async dispatch => {\r\n        try{\r\n            const savedBlog = await blogService.create(newBlog)\r\n            //console.log('savedBlog ',savedBlog);\r\n            //newBlog.id = savedBlog.id\r\n            dispatch({\r\n                type: 'ADD_BLOG',\r\n                data: savedBlog\r\n            })\r\n            dispatch(showNoti('new blog is added'))\r\n            setTimeout(() => {\r\n                dispatch(hideNoti())\r\n            }, 5000)\r\n        }catch(error){\r\n            dispatch(showNoti(error.response.data.error))\r\n            setTimeout(() => {\r\n                dispatch(hideNoti())\r\n            }, 5000)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateBlog = (id, updateBlog) => {\r\n\r\n    return async dispatch => {\r\n        try{\r\n            const updatedBlog = await blogService.update(id, updateBlog)\r\n            dispatch({\r\n                type: 'LIKE_UPDATE_BLOG',\r\n                id: id,\r\n                data: updatedBlog\r\n            })\r\n            dispatch(showNoti(`You liked this post ${id}`))\r\n            setTimeout(() => {\r\n                dispatch(hideNoti())\r\n            }, 5000)\r\n        }catch(error){\r\n            dispatch(showNoti(error.response.data.error))\r\n            setTimeout(() => {\r\n                dispatch(hideNoti())\r\n            }, 5000)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const deleteBlog = (id) => {\r\n  \r\n    return async dispatch => {\r\n        try{\r\n            const deleted = await blogService.deletee(id)//eslint-disable-line\r\n            dispatch({\r\n                type:'DELETE_BLOG',\r\n                id: id \r\n            })\r\n            dispatch(showNoti(`You deleted ${id}`))\r\n            setTimeout(() => {\r\n                dispatch(hideNoti())\r\n            }, 5000)\r\n        }catch(error){\r\n            dispatch(showNoti(error.response.data.error))\r\n            setTimeout(() => {\r\n                dispatch(hideNoti())\r\n            }, 5000)\r\n        }\r\n    }\r\n}\r\n\r\nexport const initializedBlogs = (blogs) => {\r\n   return async dispatch => {\r\n       \r\n       dispatch({\r\n            type: 'INIT_BLOGS',\r\n            data: blogs\r\n       })\r\n   }\r\n    // return async dispatch => {\r\n\r\n     \r\n\r\n    //     //   try{\r\n    //     //     const blogs = await blogService.getAll()\r\n    //     //     console.log('hellooooooooooo',blogs);\r\n    //     //     blogs.sort( (a , b) => b.likes - a.likes )\r\n    //     //     dispatch({\r\n    //     //         type: 'INIT_BLOGS',\r\n    //     //         data: blogs\r\n    //     //     }) \r\n    //     //   }catch(error){\r\n    //     //     dispatch(showNoti(error.response.data.error))\r\n    //     //     setTimeout(() => {\r\n    //     //         dispatch(hideNoti())\r\n    //     //     }, 5000)\r\n    //     //   }\r\n    // }\r\n}\r\n\r\nexport const addComment = newComment => {\r\n    return async dispatch => {\r\n        try{\r\n           \r\n            const savedComment = await commentsService.create(newComment)\r\n            //newComment.id = savedComment.id\r\n            dispatch({\r\n                type: 'ADD_COMMENT',\r\n                data: savedComment\r\n            })\r\n            dispatch(showNoti('new comment is added'))\r\n            setTimeout(() => {\r\n                dispatch(hideNoti())\r\n            }, 5000)\r\n        }catch(error){\r\n            dispatch(showNoti(error.response.data.error))\r\n            setTimeout(() => {\r\n                dispatch(hideNoti())\r\n            }, 5000)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default blogReducer","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\nimport { addComment, deleteBlog, updateBlog } from '../reducers/blogReducer'\r\nconst Blog = ({blog}) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const blogs = useSelector( state => state.blogs)\r\n\r\n  //const user = useSelector( state => state.user)\r\n\r\n  const history = useHistory()\r\n  \r\n  const [ comment, setComment ] = useState('')\r\n\r\n  const handleLikeUpdate = async (id) => {\r\n    const blog = await blogs.find( blog => blog.id === id)\r\n    //console.log('updateeeeeeeeee ',blog);\r\n    const toUpdateBlog = {\r\n      ...blog,likes : blog.likes + 1\r\n    }\r\n    //console.log('afterrrrrrr',toUpdateBlog);\r\n    dispatch(updateBlog(id,toUpdateBlog))\r\n    \r\n  }\r\n  \r\n\r\n  const handleDelete = id => {\r\n    if(window.confirm('are you sure to delete')){\r\n      dispatch(deleteBlog(id))\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  const handleComment = async (id) => {\r\n    const blogg = await blogs.find( blog => blog.id === id)\r\n    // console.log('bloggg',blogg);\r\n    // console.log('user  ',user);\r\n    const newComment = {\r\n      text: comment,\r\n      blog: blogg.id,\r\n      user: blogg.user.id\r\n    }\r\n    dispatch(addComment(newComment))\r\n    setComment('')\r\n\r\n  }\r\n  //console.log('blogcomments ', blog.comments);\r\n  return (\r\n      <div>\r\n        {\r\n          blog \r\n          ? (\r\n            <>\r\n              <div >\r\n                <div>\r\n                  <h1>{blog.title}</h1>\r\n                  <a href={blog.url}>{blog.url}</a><br/>\r\n                  {blog.likes} likes <button onClick={() => handleLikeUpdate(blog.id)} id=\"like-button\">like</button><br/>\r\n                  added by {blog.author}<br/>\r\n                  <button onClick={ () => handleDelete(blog.id)} id=\"delete-button\">delete</button>\r\n                  <h2>comments</h2>\r\n                  <input name = \"comment\" value ={comment} onChange = {(e) => setComment(e.target.value)}/>\r\n                  <button onClick={ () => handleComment(blog.id)}>add comment</button><br />\r\n                  {\r\n                   \r\n                   blog.comments\r\n                   ? (\r\n                     <>\r\n                       <ul>\r\n                         {\r\n                           blog.comments.map ( comment => (\r\n                             <li key = {comment.id}>{comment.text} </li> \r\n                           ))\r\n                         }\r\n                       </ul>\r\n                     </>\r\n                   ): null\r\n                  }\r\n                </div> \r\n              </div>\r\n            </>\r\n          )\r\n          : null\r\n        }\r\n      </div>\r\n  )\r\n}\r\nexport default Blog","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n    const noti = useSelector( state => state.noti)\r\n    return (\r\n        <div>\r\n            <p className={ noti ? \"showErrorMessage\" : \"noneErrorMessage\"}>{noti}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import axios from \"axios\"\r\n\r\nconst baseUrl = \"http://localhost:3002/api/users\"\r\n\r\n//let token = null\r\n\r\n// const setToken = newToken => {\r\n//     token = `bearer ${newToken}`\r\n// }\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return response.data\r\n}\r\n//eslint-disable-next-line\r\nexport default {\r\n    getAll,\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport userService from '../services/user'\r\n\r\nconst Users = () => {\r\n\r\n    const [ users, setUsers ] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        userService.getAll().then(users => {\r\n            setUsers(users)\r\n        })\r\n    }, [])\r\n    \r\n    \r\n    return(\r\n        <div>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td><h2>Users</h2></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td>blogs created</td>\r\n                    </tr>\r\n                    { users ?\r\n                     users.map( user => (\r\n                        <tr key={user.id}>\r\n                            <td><Link to={`/user/${user.id}`}>{user.name}</Link></td>\r\n                            <td>{user.blogs.length}</td>\r\n                        </tr>\r\n                    ))\r\n                    : null\r\n                    }\r\n                </tbody>\r\n            </table>\r\n\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users\r\n","import React from 'react'\r\n\r\nconst User = ({user, blogs}) => {\r\n    if(!user){\r\n        return null\r\n    }\r\n    // console.log('usersss',user);\r\n    // console.log('blogssss',blogs);\r\n    return (\r\n        <div>\r\n            <h3>{user.name}</h3>\r\n            <h4>added blogs</h4>\r\n            <div>\r\n                <ul>\r\n                {\r\n                    blogs.length > 0\r\n                    ? (\r\n                        blogs.map( blog => (\r\n                            <li key={blog.id}>{blog.title}</li>\r\n                        ))\r\n                    )\r\n                    : (\r\n                        <p>No blogs for this user</p>\r\n                    )\r\n                \r\n                }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\n\r\nconst AddBlog = ({handleAddBlog}) => {\r\n\r\n    // const dispatch = useDispatch()\r\n\r\n    // const handleAddBlog = (e) => {\r\n    //     e.preventDefault()\r\n    //     const title = e.target.title.value\r\n    //     const author = e.target.author.value\r\n    //     const url = e.target.url.value\r\n    //     const newBlog = {\r\n    //       title: title,\r\n    //       author: author,\r\n    //       url: url,\r\n    //       likes: 0\r\n    //     }\r\n    //     e.target.title.value = ''\r\n    //     e.target.author.value = ''\r\n    //     e.target.url.value = ''\r\n    \r\n    //     //blogRef.current.toggleVisibility()\r\n    //     dispatch(addBlog(newBlog))\r\n    \r\n    //   }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Create New Blog</h3>\r\n            <form onSubmit={handleAddBlog}>\r\n                <div>\r\n                    title\r\n                    <input name=\"title\" />\r\n                </div>\r\n                <div>\r\n                    author\r\n                    <input name=\"author\" />\r\n                </div>\r\n                <div>\r\n                    url\r\n                    <input name=\"url\"  />\r\n                </div>\r\n                <button type=\"submit\">Create</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBlog\r\n","import React, { useState, useImperativeHandle } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nconst Toggleable = React.forwardRef((props, ref) => {\r\n//const Toggleable = (props) => {\r\n    const [ visible, setVisible ] = useState(false)\r\n\r\n    const hideWhenVisible = { display: visible ? 'none' : ''}\r\n    const showWhenVisible = { display: visible ? '' : 'none'}\r\n\r\n    const toggleVisibility = () => {\r\n        setVisible(!visible)\r\n    }\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n          toggleVisibility\r\n        }\r\n      })\r\n\r\n    return (\r\n        <div>\r\n            <div style={hideWhenVisible}>\r\n                <button onClick={toggleVisibility} style={{marginBottom: '5px'}}>{props.buttonText}</button>\r\n            </div>\r\n            <div style={showWhenVisible}>\r\n                {props.children}\r\n                <button onClick={toggleVisibility} >cancel </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n)\r\n\r\n\r\n// Toggleable.propTypes = {\r\n//     buttonText : PropTypes.string.isRequired\r\n// }\r\n\r\nexport default Toggleable\r\n","import React, { useRef } from 'react'\r\nimport {  useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { addBlog } from '../reducers/blogReducer'\r\nimport AddBlog from './AddBlog'\r\nimport Toggleable from './Toggleable'\r\n\r\nconst Blogs = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const blogs = useSelector( state => state.blogs)\r\n\r\n    const blogRef = useRef()\r\n\r\n    \r\n      const blogStyle = {\r\n        paddingTop: 7,\r\n        paddingBottom: 7,\r\n        paddingLeft: 2,\r\n        border: 'solid',\r\n        borderWidth: 1,\r\n        marginBottom: 5\r\n      }\r\n\r\n    const handleAddBlog = (e) => {\r\n        e.preventDefault()\r\n        const title = e.target.title.value\r\n        const author = e.target.author.value\r\n        const url = e.target.url.value\r\n        const newBlog = {\r\n            title: title,\r\n            author: author,\r\n            url: url,\r\n            likes: 0\r\n        }\r\n        e.target.title.value = ''\r\n        e.target.author.value = ''\r\n        e.target.url.value = ''\r\n\r\n        blogRef.current.toggleVisibility()\r\n        dispatch(addBlog(newBlog))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Blog App</h2>\r\n            <Toggleable buttonText=\"create blog\" ref={blogRef}>\r\n                <AddBlog handleAddBlog={handleAddBlog}/>\r\n            </Toggleable>\r\n            {\r\n            blogs.map(blog =>\r\n                <div style={blogStyle} key={blog.id}>\r\n                    <Link to={`/blog/${blog.id}`} style={{paddingLeft: \"8px\"}}>{blog.title}</Link> \r\n                </div>\r\n            )\r\n            } \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blogs\r\n","import axios from \"axios\"\r\n\r\nconst baseUrl = \"http://localhost:3002/api/login\"\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl,credentials)\r\n    return response.data\r\n}\r\n\r\nconst logger = {\r\n    login\r\n}\r\n\r\nexport default logger","import loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\nimport { hideNoti, showNoti } from './notiReducer'\r\n\r\nconst userReducer = ( state = null, action) => {\r\n   switch (action.type) {\r\n        case 'STORE_USER_REDUX':{\r\n           return action.user\r\n        }\r\n\r\n        case 'GET_USER_REDUX':{\r\n           return state.user\r\n        }\r\n\r\n        case 'DELETE_USER_REDUX':{\r\n            return action.user\r\n        }\r\n   \r\n       default:\r\n           return state\r\n   }\r\n}\r\n\r\nexport const storeUserData = ({username, password}) => {\r\n\r\n      return async dispatch => {\r\n          try{\r\n            const userData = await loginService.login({username, password})\r\n            dispatch({\r\n                type: 'STORE_USER_REDUX',\r\n                user: userData\r\n            })\r\n            blogService.setToken(userData.token)\r\n            window.localStorage.setItem('loggedBlogAppUser',JSON.stringify(userData))\r\n\r\n          }catch(error){\r\n            dispatch(showNoti(error.response.data.error))\r\n            setTimeout(() => {\r\n                dispatch(hideNoti(''))\r\n            }, 5000);\r\n      }  \r\n      }\r\n}\r\n\r\nexport const getUserData = () => {\r\n    return async dispatch => {\r\n        const loggedUser = window.localStorage.getItem('loggedBlogAppUser')\r\n        if(loggedUser){\r\n        const user = JSON.parse(loggedUser)\r\n        dispatch({\r\n            type: 'GET_USER_REDUX',\r\n            user: user\r\n        })\r\n        blogService.setToken(user.token)\r\n      \r\n    }\r\n    }\r\n\r\n}\r\n\r\nexport const deleteUserData = () => {\r\n    window.localStorage.removeItem('loggedBlogAppUser')\r\n    return {\r\n        type: 'DELETE_USER_REDUX',\r\n        user: null\r\n    }\r\n}\r\n\r\nexport default userReducer\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { deleteUserData } from '../reducers/userReducer'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector( state => state.user )\r\n\r\n    const handleLogout = (e) => {\r\n        window.localStorage.removeItem('loggedBlogAppUser')\r\n        dispatch(deleteUserData())\r\n      }\r\n\r\n     \r\n    return (\r\n        <div>\r\n            <div style={{background: \"#f8f8f8\", padding: \"8px\"}}>\r\n                <Link to = \"/\">blogs</Link> &nbsp;\r\n                <Link to = \"/users\">users</Link> &nbsp;\r\n                {user.username} logged in <button onClick={handleLogout}>Logout</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n//import PropTypes from 'prop-types'\r\nimport { useDispatch } from 'react-redux'\r\nimport { storeUserData } from '../reducers/userReducer'\r\n\r\nconst LoginForm = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault()\r\n        //console.log('login with username and password ', username, '  ',password)\r\n        const username = e.target.username.value\r\n        const password = e.target.password.value\r\n    \r\n        dispatch(storeUserData({username,password}))\r\n        e.target.username.value = \"\"\r\n        e.target.password.value = \"\"\r\n       \r\n      }\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleLogin}>\r\n            <div>\r\n                username\r\n                <input type=\"text\" name=\"username\" id=\"username\"  />\r\n            </div>\r\n            <div>\r\n                password\r\n                <input type=\"password\" name=\"password\" id=\"password\"  />\r\n            </div>\r\n            <button type=\"submit\" id=\"button-login\">Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n// LoginForm.propTypes = {\r\n//     handleLogin : PropTypes.func.isRequired,\r\n//     handleUsernameChange : PropTypes.func.isRequired,\r\n//     handlePasswordChange : PropTypes.func.isRequired,\r\n//     username: PropTypes.string.isRequired,\r\n//     password: PropTypes.string.isRequired,\r\n// }\r\n\r\nexport default LoginForm\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Header from './Header'\r\nimport LoginForm from './LoginForm'\r\nimport Toggleable from './Toggleable'\r\n\r\nconst Container = (props) => {\r\n    const user = useSelector( state => state.user)\r\n\r\n    return (\r\n        <div>\r\n            { user === null \r\n            ? (\r\n                <Toggleable buttonText='login'>\r\n                    <LoginForm />\r\n                </Toggleable>\r\n            )\r\n            : (\r\n                <>\r\n                    <Header /> \r\n                    {props.children}\r\n                </>\r\n            )  }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React, { useEffect } from 'react'\r\nimport './App.css'\r\nimport Blog from './components/Blog'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {  initializedBlogs } from './reducers/blogReducer'\r\nimport Notification from './components/Notification'\r\nimport blogService from './services/blogs'\r\nimport Users from './components/Users'\r\nimport { Route, Switch, useRouteMatch } from 'react-router'\r\nimport User from './components/User'\r\nimport Blogs from './components/Blogs'\r\nimport Container from './components/Container'\r\n\r\nconst App = () => {\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const blogs = useSelector( state => state.blogs)\r\n  blogs.sort( (a , b) => b.likes - a.likes )\r\n\r\n  const user = useSelector( state => state.user)\r\n\r\n  const math = useRouteMatch(\"/user/:id\")\r\n  \r\n  const userBlogs = math \r\n  ? blogs.filter( blog => blog.user.id === math.params.id)\r\n  : null\r\n  //console.log('userblogsss',userBlogs);\r\n\r\n  const math1 = useRouteMatch(\"/blog/:id\")\r\n\r\n  const blog = math1\r\n  ? blogs.find( blog => blog.id === math1.params.id)\r\n  : null\r\n  //console.log('param blogss',blog);\r\n\r\n  \r\n \r\n\r\n\r\n  useEffect(() => {\r\n      \r\n      blogService.getAll().then(blogs =>{\r\n        dispatch(initializedBlogs(blogs))\r\n      })\r\n  }, [])//eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    \r\n    const loggedUser = window.localStorage.getItem('loggedBlogAppUser')\r\n    if(loggedUser){\r\n      const user = JSON.parse(loggedUser)\r\n      dispatch({\r\n        type: 'STORE_USER_REDUX',\r\n        user: user\r\n      })\r\n      blogService.setToken(user.token)\r\n     \r\n    }\r\n  }, [])//eslint-disable-line\r\n\r\n  return (\r\n    <div>\r\n     <Notification/>\r\n      <Switch>\r\n        <Route exact path = \"/\" >\r\n          <Container>\r\n            <Blogs/>\r\n          </Container>\r\n        </Route>\r\n        <Route path =\"/blog/:id\">\r\n          <Container>\r\n            <Blog blog={blog}/>\r\n          </Container>\r\n        </Route>\r\n        <Route path = \"/user/:id\">\r\n        <Container>\r\n          <User user = {user} blogs = {userBlogs}/>\r\n        </Container>\r\n          \r\n        </Route>\r\n        <Route path = \"/users\" >\r\n          <Container>\r\n            <Users />\r\n          </Container>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport blogReducer from \"./reducers/blogReducer\"\r\nimport notiReducer from './reducers/notiReducer'\r\nimport userReducer from './reducers/userReducer'\r\n\r\nconst reducer = combineReducers({\r\n    blogs: blogReducer,\r\n    noti: notiReducer,\r\n    user: userReducer\r\n})\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>,\r\n     document.getElementById('root')\r\n)"],"sourceRoot":""}