{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","components/ErrorMessage.js","components/AddBlog.js","components/LoginForm.js","components/Toggleable.js","App.js","index.js"],"names":["Blog","blog","handleLikeUpdate","handleDelete","useState","visible","setVisible","blogStyle","paddingTop","paddingBottom","paddingLeft","border","borderWidth","marginBottom","showWhenVisible","display","style","title","onClick","url","likes","id","author","baseUrl","token","logger","getAll","a","axios","get","response","data","create","newBlog","config","headers","Authorization","post","update","put","deletee","delete","setToken","newToken","login","credentials","ErrorMessage","props","className","errorMessage","AddBlog","onSubmit","handleAddBlog","type","name","value","onChange","e","setTitle","target","setAuthor","setUrl","LoginForm","handleLogin","username","password","handleUsernameChange","handlePasswordChange","Toggleable","React","forwardRef","ref","hideWhenVisible","toggleVisibility","useImperativeHandle","buttonText","children","App","blogs","setBlogs","setErrorMessage","setUsername","setPassword","user","setUser","preventDefault","loginService","userData","blogService","window","localStorage","setItem","JSON","stringify","error","setTimeout","handleLogout","removeItem","blogFormRef","current","then","savedBlogs","concat","catch","find","updateBlog","updatedBlog","map","useRef","useEffect","sort","b","loggedUser","getItem","parse","confirm","result","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be0b87ee.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nconst Blog = ({blog, handleLikeUpdate, handleDelete}) => {\r\n\r\n  const [ visible, setVisible ] = useState(false)\r\n\r\n  const blogStyle = {\r\n    paddingTop: 7,\r\n    paddingBottom: 7,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n\r\n  //const hideWhenVisible = { display: visible ? 'none' : ''}\r\n  const showWhenVisible = { display: visible ? '' : 'none'}\r\n\r\n  return (\r\n    <div>\r\n      <div style={blogStyle}>\r\n        {blog.title} <button onClick={() => setVisible(!visible)}>view</button>\r\n      </div> \r\n      <div style={showWhenVisible}>\r\n        <div style={blogStyle}>\r\n          {blog.title} <button onClick={() => setVisible(!visible)}>hide</button><br/>\r\n          {blog.url}<br/>\r\n          likes {blog.likes} <button onClick={handleLikeUpdate} id=\"like-button\">like</button><br/>\r\n          {blog.author}<br/>\r\n          <button onClick={ handleDelete} id=\"delete-button\">delete</button>\r\n        </div> \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n// {blog.title} {blog.author} {blog.url} <button>view</button>\r\nexport default Blog","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newBlog => {\r\n  const config = {\r\n    headers: { Authorization: token},\r\n  }\r\n  const response = await axios.post(baseUrl, newBlog, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id,newBlog) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.put(`${baseUrl}/${id}`,newBlog,config)\r\n  return response.data\r\n}\r\n\r\nconst deletee = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${id}`,config)\r\n  return response.data\r\n}\r\n\r\n// export default { \r\n//   getAll,\r\n//   create,\r\n//   update,\r\n//   deletee,\r\n//   setToken\r\n//  }\r\n\r\nconst logger = {\r\n  getAll,\r\n  create,\r\n  update,\r\n  deletee,\r\n  setToken\r\n};\r\nexport default logger","import axios from \"axios\"\r\n\r\nconst baseUrl = \"/api/login\"\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl,credentials)\r\n    return response.data\r\n}\r\n\r\nconst logger = {\r\n    login\r\n}\r\n\r\nexport default logger","import React from 'react'\r\n\r\nconst ErrorMessage = (props) => {\r\n    return (\r\n        <div>\r\n            <p className={ props.errorMessage ? \"showErrorMessage\" : \"noneErrorMessage\"}>{props.errorMessage}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import React from 'react'\r\n\r\nconst AddBlog = (props) => {\r\n    return (\r\n        <div>\r\n            <h3>Create New Blog</h3>\r\n            <form onSubmit={props.handleAddBlog}>\r\n                <div>\r\n                    title\r\n                    <input type=\"text\" name=\"title\" value={props.title} onChange={(e) => props.setTitle(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                    author\r\n                    <input type=\"text\" name=\"author\" value={props.author} onChange={(e) => props.setAuthor(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                    url\r\n                    <input type=\"text\" name=\"url\" value={props.url} onChange={(e) => props.setUrl(e.target.value)} />\r\n                </div>\r\n                <button type=\"submit\">Create</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBlog\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = ({handleLogin, username, password, handleUsernameChange, handlePasswordChange}) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleLogin}>\r\n            <div>\r\n                username\r\n                <input type=\"text\" name=\"username\" id=\"username\" value={username} onChange={handleUsernameChange} />\r\n            </div>\r\n            <div>\r\n                password\r\n                <input type=\"password\" name=\"password\" id=\"password\" value={password} onChange={handlePasswordChange} />\r\n            </div>\r\n            <button type=\"submit\" id=\"button-login\">Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n    handleLogin : PropTypes.func.isRequired,\r\n    handleUsernameChange : PropTypes.func.isRequired,\r\n    handlePasswordChange : PropTypes.func.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n    password: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Toggleable = React.forwardRef((props, ref) => {\r\n    const [ visible, setVisible ] = useState(false)\r\n\r\n    const hideWhenVisible = { display: visible ? 'none' : ''}\r\n    const showWhenVisible = { display: visible ? '' : 'none'}\r\n\r\n    const toggleVisibility = () => {\r\n        setVisible(!visible)\r\n    }\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n          toggleVisibility\r\n        }\r\n      })\r\n\r\n    return (\r\n        <div>\r\n            <div style={hideWhenVisible}>\r\n                <button onClick={toggleVisibility} style={{marginBottom: '5px'}}>{props.buttonText}</button>\r\n            </div>\r\n            <div style={showWhenVisible}>\r\n                {props.children}\r\n                <button onClick={toggleVisibility} >cancel </button>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nToggleable.propTypes = {\r\n    buttonText : PropTypes.string.isRequired\r\n}\r\n\r\nexport default Toggleable\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport './App.css'\r\nimport ErrorMessage from './components/ErrorMessage'\r\nimport AddBlog from './components/AddBlog'\r\nimport LoginForm from './components/LoginForm'\r\nimport Toggleable from './components/Toggleable'\r\n\r\nconst App = () => {\r\n  const [ blogs, setBlogs ] = useState([])\r\n  const [ errorMessage, setErrorMessage ] = useState('')\r\n  const [ username, setUsername ] = useState('')\r\n  const [ password, setPassword ] = useState('')\r\n  const [ user, setUser ] = useState(null)\r\n  const [ title, setTitle ] = useState('')\r\n  const [ author, setAuthor ] = useState('')\r\n  const [ url, setUrl ] = useState('')\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault()\r\n    //console.log('login with username and password ', username, '  ',password)\r\n    try{\r\n      const userData = await loginService.login({username, password})\r\n      setUser(userData)\r\n      blogService.setToken(userData.token)\r\n      window.localStorage.setItem('loggedBlogAppUser',JSON.stringify(userData))\r\n      setUsername('')\r\n      setPassword('')\r\n    }catch(ex){\r\n      //console.log('loginnnnnnnnnnn ex',ex.response.data.error)\r\n      setErrorMessage(ex.response.data.error)\r\n      setTimeout(() => {\r\n        setErrorMessage('')\r\n      }, 5000);\r\n    }   \r\n   \r\n  }\r\n\r\n  const handleLogout = (e) => {\r\n    window.localStorage.removeItem('loggedBlogAppUser')\r\n    setUser(null)\r\n  }\r\n\r\n  const handleAddBlog = (e) => {\r\n    e.preventDefault()\r\n    const newBlog = {\r\n      title: title,\r\n      author: author,\r\n      url: url,\r\n      likes: 0\r\n    }\r\n    blogFormRef.current.toggleVisibility()\r\n    blogService\r\n    .create(newBlog)\r\n    .then( savedBlogs => {\r\n      newBlog.id = savedBlogs.id\r\n      setBlogs(blogs.concat(newBlog))\r\n      setErrorMessage(\"new blog is added\")\r\n      setTimeout(() => {\r\n        setErrorMessage('')\r\n      }, 5000)\r\n      \r\n    })\r\n    .catch( error => {\r\n      setErrorMessage(error.response.data.error)\r\n      setTimeout(() => {\r\n        setErrorMessage('')\r\n      }, 5000)\r\n    })\r\n    setTitle('')\r\n    setAuthor('')\r\n    setUrl('')\r\n\r\n  }\r\n\r\n  const handleLikeUpdate = async (id) => {\r\n    const blog = await blogs.find( blog => blog.id === id)\r\n    const updateBlog = {\r\n      ...blog,likes : blog.likes + 1\r\n    }\r\n    blogService\r\n    .update(id,updateBlog)\r\n    .then( updatedBlog => {\r\n      //console.log('updateddddddddddddddd',updatedBlog);\r\n      setBlogs(blogs.map( blog => blog.id !== id ? blog : updatedBlog))\r\n      setErrorMessage(`You liked this post ${id}`)\r\n      setTimeout(() => {\r\n        setErrorMessage('')\r\n      }, 5000)\r\n    })\r\n    .catch( error => {\r\n      setErrorMessage(error.response.data.error)\r\n      setTimeout(() => {\r\n        setErrorMessage('')\r\n      }, 5000)\r\n    })\r\n\r\n  }\r\n\r\n  const handleDelete = id => {\r\n    if(window.confirm('are you sure to delete')){\r\n      blogService\r\n      .deletee(id)\r\n      .then( result => {\r\n        //console.log('delete done',result)\r\n        setErrorMessage('a blog is deleted')\r\n        setTimeout(() => {\r\n          setErrorMessage('')\r\n        }, 5000)\r\n        setBlogs(blogs.filter( blog => blog.id !== id))\r\n      })\r\n    }\r\n  }\r\n\r\n  const loginForm = () => (\r\n      <Toggleable buttonText='login'>\r\n        <LoginForm \r\n          username={username} \r\n          password={password}\r\n          handleLogin={handleLogin}\r\n          handleUsernameChange={({ target }) => setUsername(target.value)}\r\n          handlePasswordChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </Toggleable>\r\n  )\r\n  const blogFormRef = useRef()\r\n\r\n  const blogForm = () => (\r\n    <div>\r\n      <h2>Blogs</h2>\r\n      <p>{user.username} logged in <button onClick={handleLogout}>Logout</button></p>\r\n      <Toggleable buttonText=\"create blog\" ref={blogFormRef}>\r\n        <AddBlog \r\n          title={title} \r\n          author={author} \r\n          url={url} \r\n          setTitle={setTitle} \r\n          setAuthor={setAuthor} \r\n          setUrl={setUrl} \r\n          handleAddBlog={handleAddBlog}\r\n        />\r\n      </Toggleable>\r\n        {\r\n        blogs.map(blog =>\r\n          <Blog \r\n            key={blog.id} \r\n            blog={blog} \r\n            handleLikeUpdate={() => handleLikeUpdate(blog.id)}\r\n            handleDelete={() => handleDelete(blog.id)}\r\n          />\r\n        )\r\n        }\r\n    </div>\r\n  )\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>{\r\n      blogs.sort( (a , b) => b.likes - a.likes ) \r\n      setBlogs( blogs )\r\n    }\r\n      \r\n    ) \r\n    \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUser = window.localStorage.getItem('loggedBlogAppUser')\r\n    if(loggedUser){\r\n      const user = JSON.parse(loggedUser)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n      \r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <ErrorMessage errorMessage={errorMessage}/>\r\n      { user === null \r\n      ? loginForm() \r\n      : blogForm() }\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n     document.getElementById('root')\r\n)"],"sourceRoot":""}